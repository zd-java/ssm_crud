package com.zd.crud.test;

import java.util.UUID;

import org.apache.ibatis.session.SqlSession;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.zd.crud.bean.Department;
import com.zd.crud.bean.Employee;
import com.zd.crud.dao.DepartmentMapper;
import com.zd.crud.dao.EmployeeMapper;

/**
 * 	测试dao层的工作
 * @author zd
 * 	推荐Spring的项目就可以使用Spring的单元测试，可以自动注入我们需要的组件
 * 	1、导入SpringTest的模块
 * 	2、@ContextConfiguration指定Spring配置文件的位置
 * 	3、直接@Autowired要使用的组件即可
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations= {"classpath:applicationContext.xml"})
public class MapperTest {

	@Autowired
	private DepartmentMapper departmentMapper;
	
	@Autowired
	private EmployeeMapper employeeMapper;
	
	@Autowired
	private SqlSession sqlSession;
	
	/**
	 * 测试DepartmentMapper
	 */
	@Test
	public void testCRUD() {
		/*//1、创建SpringIOC容器
		ApplicationContext ioc = new ClassPathXmlApplicationContext("applicationContext.xml");
		//2、从容器中获取mapper
		DepartmentMapper bean = ioc.getBean(DepartmentMapper.class);*/
		
		System.out.println(departmentMapper);
		
		//1、插入几个部门
//		departmentMapper.insertSelective(new Department(null,"开发部"));
//		departmentMapper.insertSelective(new Department(null,"测试部"));
		
		//2、生成员工数据，测试员工插入
//		employeeMapper.insertSelective(new Employee(null,"Jerry","M","Jerry@zd.com",1));
		
		//3、批量插入多个员工；批量：使用可以执行批量操作的sqlSession
		/*for() {
			employeeMapper.insertSelective(new Employee(null,"","M","Jerry@zd.com",1));
		}*/
		EmployeeMapper mapper = sqlSession.getMapper(EmployeeMapper.class);
		for(int i=0;i<1000;i++) {
			String uuid = UUID.randomUUID().toString().substring(0, 5) + i;
			mapper.insertSelective(new Employee(null, uuid, "M", uuid+"@zd.com", 1));
		}
		System.out.println("批量完成");
		
		
		
		
	}
}
